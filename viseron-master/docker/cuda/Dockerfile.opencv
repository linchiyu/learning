# docker build -t opencv-gpu . --file ./docker/cuda/Dockerfile.opencv
# docker build -t opencv-gpu /mnt/cache/appdata/viseron --file /mnt/cache/appdata/viseron/docker/cuda/Dockerfile.opencv
# docker run --runtime=nvidia -ti --rm opencv-gpu bash
FROM roflcoopter/ffmpeg-cuda:1.0 as ffmpeg

FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04

COPY --from=ffmpeg /usr/local/ffmpeg /usr/local/ffmpeg

RUN apt-get clean && apt-get update && apt-get install -y \
    # Basic deps
    build-essential cmake unzip pkg-config wget \
    # Video and I/O
    libjpeg-dev libpng-dev libtiff-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev \
    # Optimizations
    libatlas-base-dev gfortran \
    # Python3 deps
    python3-dev \
    python3-numpy \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# OpenCV suports CC Arch 5.3 and higher
ENV CUDA_ARCH_BIN "53 60 61 70"
ENV CUDA_ARCH_PTX "70"
ENV OPENCV_VERSION=master

RUN mkdir -p /tmp && \
    cd /tmp && \
    wget -O opencv.zip https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip --progress=bar:force:noscroll && \
    wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip --progress=bar:force:noscroll && \
    unzip -q opencv.zip && \
    unzip -q opencv_contrib.zip && \
    cd opencv-$OPENCV_VERSION/ && \
    ls -al && \
    mkdir -p build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D BUILD_SHARED_LIBS=ON \
    # CUDA
    -D WITH_CUDA=ON \
    -D WITH_CUDNN=ON \
    -D CUDA_ARCH_BIN="${CUDA_ARCH_BIN}" \
    -D CUDA_ARCH_PTX="${CUDA_ARCH_PTX}" \
    -D CUDA_FAST_MATH=1 \
    -D WITH_CUBLAS=1 \
    -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs \
    -D WITH_TBB=ON \
    -DWITH_MKL=ON \
    -DMKL_USE_MULTITHREAD=ON \
    -DMKL_WITH_TBB=ON \
    -DWITH_TBB=ON \
    -D WITH_OPENGL=ON \
    -D WITH_OPENCL=ON \
    -D WITH_IPP=ON \
    -D OPENCV_DNN_CUDA=ON \
    -D OPENCV_ENABLE_NONFREE=ON \
    -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-$OPENCV_VERSION/modules \
    #-D OPENCV_FFMPEG_SKIP_BUILD_CHECK=ON \
    # -D PYTHON3_EXECUTABLE=/usr/bin/python3 \
    # -D PYTHON_INCLUDE_DIR=/usr/include/python3.5 \
    # -D PYTHON_INCLUDE_DIR2=/usr/include/x86_64-linux-gnu/python3.5m \
    # -D PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so \
    # -D PYTHON3_NUMPY_INCLUDE_DIRS=/usr/lib/python3/dist-packages/numpy/core/include/ \
    # Skip building some stuff we dont need
    -D BUILD_TESTS=OFF \
    -D BUILD_EXAMPLES=OFF \
    -D BUILD_DOCS=OFF \
    .. \
    && make -j$(nproc) && \
    make install && \
    echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf && \
    ldconfig && \
    cd /tmp && \
    rm -rf $OPENCV_VERSION opencv.zip && rm -rf opencv_contrib.zip && \
    cd /
